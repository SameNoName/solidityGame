
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;
import "IGameObject.sol";

// This is class that describes you smart contract.
contract gameObject is IGameObject{
    int health = 5;
    int defencePower;
    address attackerAddress;

    function getDefencePower() virtual internal
    {
        tvm.accept();
        defencePower = 3;
    }

    function takeDamage(int value) external override
    {
        tvm.accept();
        health -= value-defencePower;
        attackerAddress = msg.sender;
        dead();
    }

    function isDead() private returns(bool b)
    {
        tvm.accept();
        if (health > 0) return false;
        else return true;
    }

    function dead() virtual internal
    {
        tvm.accept();
        if (isDead()) 
        {
            selfDestruction(attackerAddress);
        }
    }

    function selfDestruction(address a) public
    {
		tvm.accept();
        a.transfer(0, false, 160);
    }

    function returnHealth() public returns(int)
    {
        tvm.accept();
        return health;
    }

    constructor() public {
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        getDefencePower();
        tvm.accept();
    }
}
